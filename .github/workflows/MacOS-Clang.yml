name: 'MacOS Clang'

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: macos-latest
    name: 'üöß üü® Clang'

    steps:

      - name: 'üß∞ Checkout'
        uses: actions/checkout@v2.3.5

      - name: 'üì• Load .env file'
        if: hashFiles('.github/workflows/.env/.env') != ''
        uses: xom9ikk/dotenv@v1.0.2
        with:
          path: .github/workflows/.env/

      - name: 'üì• Load .env.macos_clang file'
        if: hashFiles('.github/workflows/.env/.env.macos_clang') != ''
        uses: xom9ikk/dotenv@v1.0.2
        with:
          path: .github/workflows/.env/
          mode: macos_clang

      - name: 'üü® Setup CMake'
        uses: jwlawson/actions-setup-cmake@v1.11
        with:
          cmake-version: '${{env.CMAKE_VERSION}}'
          github-api-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'üü® Install Qt'
        uses: jurplel/install-qt-action@v2
        with:
          modules: qtscript
        
      - name: 'üü® Install packages'
        run: brew install git ${{env.INSTALL_PACKAGES}}
          && brew install icu4c
          && brew link icu4c --force
          && echo 'export PATH="/usr/local/opt/icu4c/bin:$PATH"' >> /Users/runner/.bash_profile
          && echo 'export PATH="/usr/local/opt/icu4c/sbin:$PATH"' >> /Users/runner/.bash_profile
          
      - name: 'üü® Install packages'
        run: brew link icu4c --force
          
      - name: 'üîß Configure'
        run: cmake -S ${{ github.workspace }} -B ${{ env.CMAKE_BUILD_PREFIX }} -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }}  -DBUILD_TESTS=${{ env.BUILD_TESTS }} -DBUILD_DOCS=${{ env.BUILD_DOCS }} -DBUILD_EXAMPLES=${{ env.BUILD_EXAMPLES }}

      - name: '‚öôÔ∏è Build'
        run: cmake --build ${{ env.CMAKE_BUILD_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS }}

      - name: 'üß™ Run tests'
        working-directory: ${{ env.CMAKE_BUILD_PREFIX }}
        run: ctest -C ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS }} -VV --output-on-failure
